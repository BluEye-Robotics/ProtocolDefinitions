/**
 * Common messages
 *
 * These are used for logging as well as building requests and responses.
 */

syntax = "proto3";

package blueye.protocol;
option csharp_namespace = "Blueye.Protocol.Protobuf";

/**
 * Motion input from client.
 *
 * Used to indicate the desired motion in each direction.
 * Typically these values map to the left and right joystick for motion,
 * and the left and right trigger for the slow and boost modifiers.
 */
message MotionInput {
  float surge = 1; // Forward (positive) and backwards (negative) movement. (-1..1).
  float sway = 2; // Right (positive) and left (negative) lateral movement (-1..1).
  float heave = 3; // Descend (positive) and ascend (negative) movement (-1..1).
  float yaw = 4; // Left (positive) and right (negative) movement (-1..1).
  float slow = 5; // Multiplier used to reduce the speed of the motion (0..1).
  float boost = 6; // Multiplier used to increase the speed of the motion (0..1).
}

message Lights {
  uint32 percentage = 1;
}

message LatLongPosition {
  float latitude = 1;
  float longitude = 2;
}

message ConnectionDuration {
  int64 connection_duration = 1;
}

message AutoHeadingState {
  bool enabled = 1;
}

message AutoDepthState {
  bool enabled = 1;
}

enum Directions {
  DIRECTIONS_UNSPECIFIED = 0;
  UP = 1;
  DOWN = 2;
}

message SystemTime {
  string unix_timestamp = 1;
}


message CameraParameters {
  message Bitrate {
    int32 bitrate = 1;
  }

  message Exposure {
    int32 exposure = 1;
  }

  message WhiteBalance {
    int32 white_balance = 1;
  }

  message Hue {
    int32 hue = 1;
  }

  message Resolution {
    enum ValidResolutions {
      RESOLUTION_UNSPECIFIED = 0;
      FULLHD_1080P = 1;
      HD_720P = 2;
    }
    ValidResolutions resolution = 1;
  }

  message FrameRate {
    enum ValidFrameRates {
      FRAMERATE_UNSPECIFIED = 0;
      FPS_30 = 1;
      FPS_25 = 2;
    }
    ValidFrameRates frame_rate = 1;
  }

  Bitrate bitrate = 1;
  Exposure exposure = 2;
  WhiteBalance white_balance = 3;
  Hue hue = 4;
  Resolution resolution = 5;
  FrameRate frame_rate = 6;
}

message RecordingState {
  bool is_recording = 1;
}

message TiltStabilizationState {
  bool stabilization_enabled = 1;
}

message TiltSpeed {
  float speed = 1;
}
